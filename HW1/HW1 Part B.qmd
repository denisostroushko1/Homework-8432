---
title: "HW1"
format: 
  pdf:
    toc: false
execute: 
  warning: false
  echo: true
  message: false
---

```{r}
library(tidyverse)
```

```{r some problems from part A} 
#| eval: false 
#| echo: false
set.seed(123)
          ############# A ###############
n_simulations <- 10000
uniform_numbers <- runif(n_simulations)

## 1 

# P1 = 1/6 
# P1 + P2 = 1/3 + 1/6
# P1 + P2 + P3 = 1/3 + 1/6 + 1/4
# P1 + P2 + P3 + P4 = 1 



a_1 <-
  data.frame(
    U = uniform_numbers, 
    
    X = case_when(
      uniform_numbers < 1/6 ~ 1, 
      uniform_numbers > 1/6 & uniform_numbers < 1/3+ 1/6 ~ 2,
      uniform_numbers > 1/3+ 1/6 & uniform_numbers < 1/3+ 1/6 +1/4 ~ 3,
      uniform_numbers > 1/3+ 1/6 +1/4 ~ 4
    )
  )

head(a_1$X, 30)

ggplot(
  data = a_1, 
  aes(x = X)
) + geom_bar() 

ggplot(
  data = a_1, 
  aes(x = X)
) + geom_bar() + 
  scale_y_continuous(
    labels = function(x){x/nrow(a_1)}
  )

mean(a_1$X)

print(1*1/6 + 2*1/3 + 3*1/4 + 4*1/4)

## 2
binom_prob = dbinom(c(0, 1, 2, 3, 4), size = 4, p = 1/3)

a_2 <-
  data.frame(
    U = uniform_numbers, 
    
    X = case_when(
      uniform_numbers < binom_prob[1] ~ 0, 
      uniform_numbers > binom_prob[1] & uniform_numbers < binom_prob[2]+ binom_prob[1] ~1,
      
      uniform_numbers > binom_prob[1] + binom_prob[2] 
      & uniform_numbers < binom_prob[3] + binom_prob[2]+ binom_prob[1] ~2,
      
      uniform_numbers > binom_prob[3] + binom_prob[2]+ binom_prob[1]
      & uniform_numbers <binom_prob[3] + binom_prob[2]+ binom_prob[1] + binom_prob[4] ~3,
      
      uniform_numbers > binom_prob[3] + binom_prob[2]+ binom_prob[1] + binom_prob[4] ~ 4
    )
  )


head(a_2$X, 30)

ggplot(
  data = a_2, 
  aes(x = X)
) + geom_bar() 

ggplot(
  data = a_2, 
  aes(x = X)
) + geom_bar() + 
  scale_y_continuous(
    labels = function(x){x/nrow(a_1)}
  )

mean(a_2$X)
4 * 1/3

## 3 

F_inverse = function(u){-1/4 * log(u)}
exp = F_inverse(uniform_numbers)

head(exp, 30)

ggplot(
  data = data.frame(
    X = exp
  ), 
  aes(x = X)
) + geom_histogram(bins = 10, color = "black", fill = "grey") 

mean(exp)

print(1/4)
```

# Problem B 

## Step 1: uniform random numbers simulation 

We draw 10,000 random numbers form a $U(0,1)$ distribution

```{r}
set.seed(123)
n_simulations <- 10000
uniform_numbers <- runif(n = n_simulations, min = 0, max = 1)

```

Let $X = 1$ if the coin comes up Heads, and $X = 0$ if the coin comes up Tails. Let $U$ be a uniform $U(0,1)$ variable. 

We know that $P(X = 1)$ = $P(X = 0)$ = 0.5. 

Therefore, 

\begin{equation}
\bold{X} = 
\begin{cases}
    x_0 = 0 ,\ U \leq P(X = 0)\\
    x_1 = 1 ,\ P(X = 0) < U \leq P(X = 0) + P(X = 1)
\end{cases}
\end{equation}

The first 30 uniform random numbers are: 
```{r}
head(uniform_numbers, 30)
```

```{r}
p <- 0.5

# Simulate the coin toss using the Bernoulli distribution
coin_toss <- ifelse(uniform_numbers <= p, 0, 1)

```

Applying a rule from equation (1) produces coin tosses, the first 30 tosses are: 

```{r}
head(coin_toss, 30)
```

Final proportion of Tails is `r round(mean(coin_toss), 2)`

Running proportion of Tails is shown on @fig-long-run

```{r}
#| label: fig-long-run
#| fig-cap: "Long running proportions of Tails" 

toss = seq(from = 1, to = length(coin_toss), by = 1)
           
ggplot(
  data = data.frame(
    toss = toss, 
    runprop = cumsum(coin_toss)/toss
  ), 
   aes(
    x = toss, 
    y = runprop
      )
) + geom_line() + 
  theme_minimal() + 
  ylab("Proportion of Tails") + 
  xlab("Number of Coin Tosses")

```

@fig-long-run shows that after about 1,250 coin tosses the proportion of heads and tails converges to around 0.5

